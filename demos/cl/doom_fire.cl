__constant uint3 palette[MAX_PALETTE] = {
    {0x07, 0x07, 0x07},
    {0x1f, 0x07, 0x07},
    {0x2f, 0x0f, 0x07},
    {0x47, 0x0f, 0x07},
    {0x57, 0x17, 0x07},
    {0x67, 0x1f, 0x07},
    {0x77, 0x1f, 0x07},
    {0x8f, 0x27, 0x07},
    {0x9f, 0x2f, 0x07},
    {0xaf, 0x3f, 0x07},
    {0xbf, 0x47, 0x07},
    {0xc7, 0x47, 0x07},
    {0xdf, 0x4f, 0x07},
    {0xdf, 0x57, 0x07},
    {0xdf, 0x57, 0x07},
    {0xd7, 0x5f, 0x07},
    {0xd7, 0x5f, 0x07},
    {0xd7, 0x67, 0x0f},
    {0xcf, 0x6f, 0x0f},
    {0xcf, 0x77, 0x0f},
    {0xcf, 0x7f, 0x0f},
    {0xcf, 0x87, 0x17},
    {0xc7, 0x87, 0x17},
    {0xc7, 0x8f, 0x17},
    {0xc7, 0x97, 0x1f},
    {0xbf, 0x9f, 0x1f},
    {0xbf, 0x9f, 0x1f},
    {0xbf, 0xa7, 0x27},
    {0xbf, 0xa7, 0x27},
    {0xbf, 0xaf, 0x2f},
    {0xb7, 0xaf, 0x2f},
    {0xb7, 0xb7, 0x2f},
    {0xb7, 0xb7, 0x37},
    {0xcf, 0xcf, 0x6f},
    {0xdf, 0xdf, 0x9f},
    {0xef, 0xef, 0xc7},
    {0xff, 0xff, 0xff}};

__kernel void update(
    uint width, uint height,
    __global struct rnd_gen *rnd_p,
    __global uchar *buf,
    __write_only image2d_t img
) {
    const uint y = get_global_id(0);
    buf += width * y;
    if(y == height - 1) {
        for(uint x = 0; x < width; ++x)
            write_imageui(img, (int2){x, y}, (uint4){palette[buf[x]], 255});
        return;
    }
    struct rnd_gen rnd = *(rnd_p += get_local_id(0));
    const uint width_mask = width - 1;
    for(uint x = 0; x < width; ++x) {
        const uchar rnd_f = round(rnd_gen_next(&rnd) * 3.0f);
        const uchar damp = rnd_f & 1;
        const uchar px = sub_sat(buf[width + x], damp);
        const uint x_rnd = sub_sat(x + 1, (uint)rnd_f) & width_mask;
        buf[x_rnd] = px;
        write_imageui(img, (int2){x_rnd, y}, (uint4){palette[px], 255});
    }
    *rnd_p = rnd;
}
