local entity = require "nngn.lib.entity"
local map = require "nngn.lib.map"
local player = require "nngn.lib.player"

local entities = {}
local warp

local function init()
    -- warp
    table.insert(entities, entity.load(nil, nil, {
        pos = {-48, 16}, collider = {
            type = Collider.AABB, bb = 32, flags = Collider.TRIGGER}}))
    warp = entities[#entities]
    for _, t in ipairs({
        -- middle ship
        {{   0,  328}, { -32,  -16,  32,  16}},
        {{-115,  218}, { -13,  -26,  13,  26}},
        {{ 115,  218}, { -13,  -26,  13,  26}},
        {{-192,  144}, {-128,  -48, 128,  48}},
        {{   0,  160}, { -32,  -32,  32,  32}},
        {{ 141,  160}, { -77,  -32,  77,  32}},
        {{-160,   48}, { -58,  -48,  58,  48}},
        {{ 160,   48}, { -58,  -48,  58,  48}},
        {{  16,   72}, { -16,  -24,  16,  24}},
        {{   0,  -16}, { -64,  -16,  64,  16}},
        {{ -16,  -48}, { -16,  -16,  16,  16}},
        {{  16,  -56}, { -16,  -24,  16,  24}},
        {{-141, -176}, { -77, -112,  77, 112}},
        {{ 160,  -96}, { -58,  -64,  58,  64}},
        {{ -48, -180}, { -16,  -84,  16,  84}},
        {{  67, -180}, { -35,  -84,  35,  84}},
        -- south ship
        {{-112, -339}, { -16,  -13,  16,  13}},
        {{ 112, -339}, { -16,  -13,  16,  13}},
        {{   0, -368}, { -96,  -16,  96,  16}},
        -- west ship
        {{-304,   92}, { -16,   -4,  16,   4}},
        {{-336,  -96}, { -16, -192,  16, 192}},
        {{-288,  -80}, { -32,  -16,  32,  16}},
        {{-304, -120}, { -16,  -24,  16,  24}},
        {{-288, -192}, { -32,  -32,  32,  32}},
        {{-221, -176}, {  -3,  -16,   3,  16}},
        {{-272, -304}, { -48,  -16,  48,  16}},
        -- east ship
        {{ 272,   45}, { -16, -205,  16, 205}},
        {{ 221,  -80}, {  -3,  -16,   3,  16}},
        {{ 253,  -80}, {  -3,  -16,   3,  16}},
        {{ 240, -176}, { -16,  -16,  16,  16}},
    }) do
        table.insert(entities, entity.load(nil, nil, {
            pos = t[1], collider = {
                type = Collider.AABB,
                bb = t[2], m = Math.INFINITY, flags = Collider.SOLID}}))
    end
    for _, t in ipairs({
        -- middle ship
        {{ -72,  284}, {  -8,  -50,   8,  50}, -45.0},
        {{  72,  284}, {  -8,  -50,   8,  50},  45.0},
        -- south ship
        {{ -70, -290}, {  -8,  -45,   8,  45}, -45.0},
        {{  70, -290}, {  -8,  -45,   8,  45},  45.0},
        -- west ship
        {{-248,   60}, {  -8,  -50,   8,  50},  45.0},
        -- east ship
        {{ 248,  220}, {  -8,  -50,   8,  50}, -45.0},
    }) do
        table.insert(entities, entity.load(nil, nil, {
            pos = t[1], collider = {
                type = Collider.BB,
                bb = t[2], rot = math.rad(t[3]),
                m = Math.INFINITY, flags = Collider.SOLID}}))
    end
    player.move_all(-80, 16, true)
end

map.map {
    name = "fe3",
    file = "maps/fe3.lua",
    init = init,
    entities = entities,
    on_collision = function(e0, e1)
        if e0 == warp or e1 == warp then map.next("maps/fe0.lua") end
    end,
    tiles = {
        "img/fire_emblem/17.png",
        32, -16, -16, 32, 32, 19, 21, {
             3, 20,   3, 20,   1, 22,   2, 22,   9, 24,   9, 24,   4, 20,   4, 28,   2, 25,   8, 30,   8, 30,   2, 25,   2, 30,   5, 20,   6, 20,   9, 24,  10, 23,   1, 20,   6,  5,
             2, 23,  10, 21,  11, 21,   4, 23,   9, 24,   9, 24,  12, 21,   6, 31,   0, 30,   7, 25,   7, 25,   2, 30,   9, 31,   0, 20,   3, 22,   2, 24,  12, 22,   1, 20,   2,  1,
             6, 23,   6, 23,   6, 23,   8, 24,  12, 25,   9, 24,  12, 22,   5, 21,   6, 31,   6, 21,   6, 21,   7, 21,   8, 21,   4, 21,   9, 24,  12, 25,  12, 22,   0, 21,   9,  2,
             5, 25,   5, 25,   8, 30,   5, 29,  10, 25,   2, 24,  12, 22,   0, 21,   1, 21,   1, 23,   1, 23,   2, 21,   3, 21,   4, 21,   6, 24,  10, 25,   6, 22,   7, 22,   8,  3,
             8, 25,   8, 25,   5, 22,   7, 26,  10, 25,   2, 24,   6, 22,   7, 22,   8, 22,   1, 23,   1, 23,   9, 22,  10, 22,  11, 22,   3, 22,  10, 25,  10, 23,  11, 23,  12,  4,
             7, 23,   8, 23,   4, 24,   9, 23,  10, 25,   9, 24,  10, 23,  11, 23,  12, 23,   1, 23,   1, 23,   0, 22,   1, 22,   2, 22,  12, 25,   3, 22,  11, 24,   4, 22,   0,  4,
            12, 26,   0, 25,   8, 30,  10, 24,  10, 25,   2, 24,  11, 24,  12, 24,   0, 23,   1, 23,   1, 23,   2, 23,   3, 23,   4, 23,  10, 25,  12, 25,   7, 24,   5, 23,   6,  4,
             5, 26,   9, 25,   8, 30,   5, 29,  10, 25,   6, 24,   7, 24,   2, 26,   2, 26,   0, 24,   1, 30,   2, 26,   2, 26,   8, 24,  10, 25,   9, 24,   1, 25,   3, 27,   7,  6,
             2, 26,   2, 26,   6, 25,   7, 26,  10, 25,  12, 25,   1, 25,   2, 26,   0, 24,   5, 25,  12, 26,   0, 25,   1, 24,   7, 26,  10, 25,   2, 24,   3, 24,   4, 24,   5,  5,
             4, 27,   8, 30,   8, 30,  11, 27,  12, 27,  12, 27,   0, 26,  11, 26,   7, 25,   8, 25,   5, 26,   9, 25,   4, 27,   7, 26,  10, 25,  11, 25,   2, 29,   3, 27,   4,  8,
             8, 30,   2, 25,   4, 27,  11, 27,  12, 27,  12, 27,   0, 26,  11, 26,   2, 26,   2, 26,   2, 26,   2, 26,   6, 25,  11, 27,  12, 27,  12, 27,   0, 26,   1, 26,   2,  6,
             4, 27,   2, 25,   2, 30,   3, 25,   4, 30,   4, 31,   4, 25,  11, 26,   2, 25,   4, 27,   8, 30,   4, 27,   4, 27,   7, 26,  11, 30,  11, 30,   2, 27,   3, 27,   5,  6,
             8, 30,   2, 30,   9, 31,  10, 26,   4, 31,   1, 29,   2, 29,  11, 26,   8, 30,   8, 30,  12, 26,   0, 25,   8, 30,   5, 29,   6, 29,  11, 30,   1, 25,   3, 27,   9,  7,
             8, 31,   9, 31,   6, 27,   0, 31,  10, 30,   1, 29,   3, 26,   4, 26,   4, 27,   4, 27,   5, 26,   6, 26,   4, 27,   7, 26,   6, 29,   4, 30,   8, 26,   3, 27,   9,  7,
             5, 27,   6, 27,   0, 31,   8, 29,   3, 31,   6, 28,   2, 29,   7, 27,   8, 27,   8, 30,   8, 30,   9, 27,  10, 27,  11, 27,  12, 27,  12, 27,   0, 26,   1, 26,   2,  7,
             5, 28,   8, 29,  11, 31,   1, 31,   3, 31,   6, 28,   7, 28,   8, 28,   9, 28,  10, 28,  11, 28,   9, 28,  12, 28,   0, 27,   1, 27,  11, 30,   2, 27,   3, 27,   4,  8,
             7, 29,   8, 29,   1, 31,   1, 31,   3, 31,   9, 29,  10, 29,  11, 29,  12, 29,   0, 28,   1, 28,  12, 29,   0, 28,   2, 28,   3, 28,  10, 30,   6, 30,   4, 28,   8, 11,
            12, 30,   0, 29,   0, 31,   1, 31,   3, 31,   1, 29,   2, 29,   3, 29,   8, 30,   8, 30,   8, 30,   8, 30,   4, 29,   5, 29,   6, 29,   4, 30,  12, 31,   6, 31,   0, 11,
             0, 31,  11, 31,   5, 30,   1, 31,   4, 31,   4, 30,   6, 30,   7, 30,   8, 30,   8, 30,   8, 30,   8, 30,   2, 30,   9, 30,   4, 31,  10, 30,  11, 30,   5, 31,   6, 12,
            11, 31,   1, 31,   1, 31,   1, 31,   3, 31,   4, 31,  12, 31,   6, 31,   0, 30,   1, 30,   1, 30,   2, 30,   9, 31,   3, 30,   3, 31,   4, 31,   4, 30,   4, 31,   5, 12,
             0, 31,   1, 31,   1, 31,   1, 31,   2, 31,   3, 31,   4, 31,   5, 31,   6, 31,   7, 31,   8, 31,   9, 31,  10, 31,   3, 31,   3, 31,   4, 31,   3, 31,   3, 31,   4, 12,
         },
     },
}
